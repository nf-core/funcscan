# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
name: nf-core CI
on:
  push:
    branches:
      - "dev"
  pull_request:
    branches:
      - "dev"
      - "master"
  release:
    types:
      - "published"

env:
  NXF_ANSI_LOG: false
  NFTEST_VER: "0.8.4"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  define_nxf_versions:
    name: Choose nextflow versions to test against depending on target branch
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.nxf_versions.outputs.matrix }}
    steps:
      - id: nxf_versions
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "dev" && "${{ matrix.NXF_VER }}" != "latest-everything" ]]; then
            echo matrix='["latest-everything"]' | tee -a $GITHUB_OUTPUT
          else
            echo matrix='["latest-everything", "23.10.0"]' | tee -a $GITHUB_OUTPUT
          fi

  test:
    name: nf-test
    needs: define_nxf_versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        NXF_VER: ${{ fromJson(needs.define_nxf_versions.outputs.matrix) }}
        tags:
          - "test"
          - "test_nothing"
          - "test_bakta"
          - "test_prokka"
          - "test_bgc_pyrodigal"
          - "test_bgc_bakta"
          - "test_bgc_prokka"
          - "test_taxonomy_pyrodigal"
          - "test_taxonomy_bakta"
          - "test_taxonomy_prokka"
          - "test_preannotated"
          - "test_preannotated_bgc"
        profile:
          - "docker"

    steps:
      - name: Check out pipeline code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      - name: Check out test data
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: funcscan
          path: test-datasets/
          fetch-depth: 1

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Disk space cleanup
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1

      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash -s $NFTEST_VER
          sudo mv nf-test /usr/local/bin/

      - name: Run nf-test
        run: |
          nf-test test --tag ${{ matrix.tags }} --profile ${{ matrix.tags }},${{ matrix.profile }} --junitxml=test.xml

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always ${{ github.workspace }}/.nf-test/*/tests/output/pipeline_info/software_versions.yml

      - name: Zip hamronization results
        if: failure()
        run: |
          tar czf harmonizationresults.tar.gz .nf-test/tests/*/output/reports/hamronization_summarize/hamronization_combined_report.tsv

      - name: Upload linting log file artifact HARMIIZATIONFAILURE
        if: ${{ always() }}
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: linting-logs-harmonization
          path: |
            .nextflow.log
            harmonizationresults.tar.gz

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "*.xml"

# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
name: nf-core CI
on:
  push:
    branches:
      - "dev"
  pull_request:
    branches:
      - "dev"
      - "master"
  release:
    types: [published]
  workflow_dispatch:

env:
  NXF_ANSI_LOG: false
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  NFTEST_VER: "0.9.0"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  define_nxf_versions:
    name: Choose nextflow versions to test against depending on target branch
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.nxf_versions.outputs.matrix }}
    steps:
      - id: nxf_versions
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "dev" && "${{ matrix.NXF_VER }}" != "latest-everything" ]]; then
            echo matrix='["latest-everything"]' | tee -a $GITHUB_OUTPUT
          else
            echo matrix='["latest-everything", "23.10.0"]' | tee -a $GITHUB_OUTPUT
          fi

  test:
    name: "Run pipeline with test data (${{ matrix.NXF_VER }} | ${{ matrix.test_name }} | ${{ matrix.profile }})"
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/funcscan') }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        NXF_VER:
          - "24.10.2"
          - "latest-everything"
        profile:
          - "conda"
          - "docker"
          - "singularity"
        test_name:
          - "test"
          - "test_nothing"
          - "test_bakta"
          - "test_prokka"
          - "test_bgc_pyrodigal"
          - "test_bgc_bakta"
          - "test_bgc_prokka"
          - "test_taxonomy_pyrodigal"
          - "test_taxonomy_bakta"
          - "test_taxonomy_prokka"
          - "test_preannotated"
          - "test_preannotated_bgc"
        isMaster:
          - ${{ github.base_ref == 'master' }}
        # Exclude conda and singularity on dev
        exclude:
          - isMaster: false
            profile: "docker"
          - isMaster: false
            profile: "singularity"
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Check out test data
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: funcscan
          path: test-datasets/
          fetch-depth: 1

      - name: Set up Apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@main

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        run: |
          mkdir -p $NXF_SINGULARITY_CACHEDIR
          mkdir -p $NXF_SINGULARITY_LIBRARYDIR

      - name: Set up Miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@a4260408e20b96e80095f42ff7f1a15b27dd94ca # v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          conda-solver: libmamba
          channels: conda-forge,bioconda

      - name: Set up Conda
        if: matrix.profile == 'conda'
        run: |
          echo $(realpath $CONDA)/condabin >> $GITHUB_PATH
          echo $(realpath python) >> $GITHUB_PATH

      - name: Clean up Disk space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1

      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash -s $NFTEST_VER
          sudo mv nf-test /usr/local/bin/

      - name: "Run pipeline with test data ${{ matrix.NXF_VER }} | ${{ matrix.test_name }} | ${{ matrix.profile }}"
        run: |
          nf-test test --tag ${{ matrix.test_name }} --profile ${{ matrix.test_name }},${{ matrix.profile }} --junitxml=test.xml

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always ${{ github.workspace }}/.nf-test/*/tests/output/pipeline_info/software_versions.yml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "*.xml"

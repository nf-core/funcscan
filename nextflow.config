/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/funcscan Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null

    // Annotation options
    annotation_tool                         = 'pyrodigal'
    save_annotations                        = false

    annotation_prodigal_singlemode          = false
    annotation_prodigal_closed              = false
    annotation_prodigal_transtable          = 11
    annotation_prodigal_forcenonsd          = false

    annotation_pyrodigal_singlemode         = false
    annotation_pyrodigal_closed             = false
    annotation_pyrodigal_transtable         = 11
    annotation_pyrodigal_forcenonsd         = false

    annotation_bakta_db_localpath           = null
    annotation_bakta_db_downloadtype        = 'full'
    annotation_bakta_singlemode             = false
    annotation_bakta_mincontiglen           = 1
    annotation_bakta_translationtable       = 11
    annotation_bakta_gram                   = '?'
    annotation_bakta_complete               = false
    annotation_bakta_renamecontigheaders    = false
    annotation_bakta_compliant              = false
    annotation_bakta_trna                   = false
    annotation_bakta_tmrna                  = false
    annotation_bakta_rrna                   = false
    annotation_bakta_ncrna                  = false
    annotation_bakta_ncrnaregion            = false
    annotation_bakta_crispr                 = false
    annotation_bakta_skipcds                = false
    annotation_bakta_pseudo                 = false
    annotation_bakta_skipsorf               = false
    annotation_bakta_gap                    = false
    annotation_bakta_ori                    = false
    annotation_bakta_activate_plot          = false

    annotation_prokka_singlemode            = false
    annotation_prokka_rawproduct            = false
    annotation_prokka_kingdom               = 'Bacteria'
    annotation_prokka_gcode                 = 11
    annotation_prokka_cdsrnaolap            = false
    annotation_prokka_rnammer               = false
    annotation_prokka_mincontiglen          = 1
    annotation_prokka_evalue                = 0.000001
    annotation_prokka_coverage              = 80
    annotation_prokka_compliant             = true
    annotation_prokka_addgenes              = false
    annotation_prokka_retaincontigheaders   = false

    // Database downloading options
    save_databases                          = false

    // AMP options
    run_amp_screening                       = false

    amp_skip_amplify                        = false

    amp_skip_macrel                         = false

    amp_skip_ampir                          = false
    amp_ampir_model                         = 'precursor'
    amp_ampir_minlength                     = 10

    amp_skip_hmmsearch                      = false
    amp_hmmsearch_models                    = null
    amp_hmmsearch_savealignments            = false
    amp_hmmsearch_savetargets               = false
    amp_hmmsearch_savedomains               = false

    amp_ampcombi_db                         = null
    amp_ampcombi_cutoff                     = 0

    // ARG options
    run_arg_screening                       = false

    arg_skip_fargene                        = false
    arg_fargene_hmmmodel                    = 'class_a,class_b_1_2,class_b_3,class_c,class_d_1,class_d_2,qnr,tet_efflux,tet_rpg,tet_enzyme'
    arg_fargene_savetmpfiles                = false
    arg_fargene_minorflength                = 90
    arg_fargene_score                       = null
    arg_fargene_translationformat           = 'pearson'
    arg_fargene_orffinder                   = false

    arg_skip_rgi                            = false
    arg_rgi_savejson                        = false
    arg_rgi_savetmpfiles                    = false
    arg_rgi_alignmenttool                   = 'BLAST'
    arg_rgi_includeloose                    = true
    arg_rgi_excludenudge                    = true
    arg_rgi_lowquality                      = false
    arg_rgi_data                            = 'NA'

    arg_skip_amrfinderplus                  = false
    arg_amrfinderplus_db                    = null
    arg_amrfinderplus_identmin              = -1
    arg_amrfinderplus_coveragemin           = 0.5
    arg_amrfinderplus_translationtable      = 11
    arg_amrfinderplus_plus                  = false
    arg_amrfinderplus_name                  = false

    arg_skip_deeparg                        = false
    arg_deeparg_data                        = null
    arg_deeparg_data_version                = 2     // Make sure to update on module version bump!
    arg_deeparg_model                       = 'LS'
    arg_deeparg_minprob                     = 0.8
    arg_deeparg_alignmentidentity           = 50
    arg_deeparg_alignmentevalue             = 1e-10
    arg_deeparg_alignmentoverlap            = 0.8
    arg_deeparg_numalignmentsperentry       = 1000

    arg_skip_abricate                       = false
    arg_abricate_db                         = 'ncbi'
    arg_abricate_minid                      = 80
    arg_abricate_mincov                     = 80

    arg_hamronization_summarizeformat       = 'tsv'

    // BGC options
    run_bgc_screening                       = false

    bgc_skip_antismash                      = false
    bgc_antismash_databases                 = null
    bgc_antismash_installationdirectory     = null
    bgc_antismash_cbgeneral                 = false
    bgc_antismash_cbknownclusters           = false
    bgc_antismash_cbsubclusters             = false
    bgc_antismash_smcogtrees                = false
    bgc_antismash_ccmibig                   = false
    bgc_antismash_contigminlength           = 1000
    bgc_antismash_hmmdetectionstrictness    = 'relaxed'
    bgc_antismash_taxon                     = 'bacteria'
    bgc_antismash_sampleminlength           = 1000

    bgc_skip_deepbgc                        = false
    bgc_deepbgc_database                    = null
    bgc_deepbgc_score                       = 0.5
    bgc_deepbgc_prodigalsinglemode          = false
    bgc_deepbgc_mergemaxproteingap          = 0
    bgc_deepbgc_mergemaxnuclgap             = 0
    bgc_deepbgc_minnucl                     = 1
    bgc_deepbgc_minproteins                 = 1
    bgc_deepbgc_mindomains                  = 1
    bgc_deepbgc_minbiodomains               = 0
    bgc_deepbgc_classifierscore             = 0.5

    bgc_skip_gecco                          = false
    bgc_gecco_cds                           = 3
    bgc_gecco_threshold                     = 0.8
    bgc_gecco_pfilter                       = 0.000000001
    bgc_gecco_edgedistance                  = 0
    bgc_gecco_mask                          = false

    bgc_skip_hmmsearch                      = false
    bgc_hmmsearch_models                    = null
    bgc_hmmsearch_savealignments            = false
    bgc_hmmsearch_savetargets               = false
    bgc_hmmsearch_savedomains               = false

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base,fasta'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/funcscan custom profiles from different institutions.

try {
    includeConfig "${params.custom_config_base}/pipeline/funcscan.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config/funcscan profiles: ${params.custom_config_base}/pipeline/funcscan.config")
}

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        channels               = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        conda.enabled          = false
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
    test         { includeConfig 'conf/test.config'         }
    test_bgc     { includeConfig 'conf/test_bgc.config'     }
    test_full    { includeConfig 'conf/test_full.config'    }
    test_deeparg { includeConfig 'conf/test_deeparg.config' }
    test_nothing { includeConfig 'conf/test_nothing.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/funcscan'
    author          = """Jasmin Frangenberg, Anan Ibrahim, Louisa Perelo, Moritz E. Beber, James A. Fellows Yates"""
    homePage        = 'https://github.com/nf-core/funcscan'
    description     = """Pipeline for screening for functional components of assembled contigs"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.2.0dev'
    doi             = '10.5281/zenodo.7643099'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
